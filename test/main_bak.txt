#include <Arduino.h>
#include <ESP32MX1508.h>
#include <ESP32Encoder.h>

// Motor pins
const int motor1A = 4;
const int motor1B = 16;
const int motor2A = 21;
const int motor2B = 19;
const int motor3A = 27;
const int motor3B = 26;

const int motorLA = 35;
const int motorLB = 34;

// Encoder pins
const int encoder1A = 15;
const int encoder1B = 2;
const int encoder2A = 22;
const int encoder2B = 23;
const int encoder3A = 13;
const int encoder3B = 12;

// PWM Channels
#define CH1 0
#define CH2 1
#define CH3 2
#define CH4 3
#define CH5 4
#define CH6 5
#define CH7 6
#define CH8 7

// Optional Parameters
#define RES 8 // Resolution in bits: 8 (0-255), 12 (0-4095), or 16 (0-65535)
#define FREQ 5000 // PWM Frequency in Hz

// Motor objects
MX1508 motor1(motor1A, motor1B, CH1, CH2, RES, FREQ);
MX1508 motor2(motor2A, motor2B, CH3, CH4, RES, FREQ);
MX1508 motor3(motor3A, motor3B, CH5, CH6, RES, FREQ);

MX1508 motorL(motorLA, motorLB, CH7, CH8, RES, FREQ);

// Encoder objects
ESP32Encoder encoder1;
ESP32Encoder encoder2;
ESP32Encoder encoder3;

void setup() {
  Serial.begin(115200);
  
  // Setup encoders
  encoder1.attachHalfQuad(encoder1A, encoder1B);
  encoder1.setCount(0);
  
  encoder2.attachHalfQuad(encoder2A, encoder2B);
  encoder2.setCount(0);
  
  encoder3.attachHalfQuad(encoder3A, encoder3B);
  encoder3.setCount(0);
}

void testMotor(MX1508 &motor, const char* motorName, ESP32Encoder &encoder) {
  Serial.print(motorName);
  Serial.println(" Forward");
  motor.motorGo(200); // Spin forward
  delay(1000);
  Serial.print(motorName);
  Serial.print(" Count: ");
  Serial.println(encoder.getCount() / 2);
  
  Serial.print(motorName);
  Serial.println(" Stop");
  motor.motorStop(); // Soft stop
  delay(500);
  
  Serial.print(motorName);
  Serial.println(" Reverse");
  motor.motorRev(200); // Spin reverse
  delay(1000);
  Serial.print(motorName);
  Serial.print(" Count: ");
  Serial.println(encoder.getCount() / 2);
  
  Serial.print(motorName);
  Serial.println(" Brake");
  motor.motorBrake(); // Hard stop
  delay(500);
}

void loop() {
  testMotor(motor1, "Motor 1", encoder1);
  testMotor(motor2, "Motor 2", encoder2);
  testMotor(motor3, "Motor 3", encoder3);
  testMotor(motorL, "Motor L", encoder1);
}
